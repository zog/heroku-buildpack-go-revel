#!/bin/bash
# usage: bin/compile <build-dir> <cache-dir>

set -eo pipefail

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)
ver=${GOVERSION:-1.1.2}
file=${GOFILE:-go$ver.$(uname|tr A-Z a-z)-amd64.tar.gz}
url=${GOURL:-http://go.googlecode.com/files/$file}
buildpack=$(dirname $(dirname $0))
arch=$(uname -m|tr A-Z a-z)
if test $arch = x86_64
then arch=amd64
fi
plat=$(uname|tr A-Z a-z)-$arch

# Python
echo '== setting up python'
venv=$cache/venv
mkdir -p $cache/pip
python=python2.7
PATH=$buildpack/$plat/bin:$venv/bin:$PATH

virtualenv() {
    echo
    echo python "$buildpack/vendor/virtualenv-1.11.6/virtualenv.py" "$@"
    echo
    which python
    which $python
    echo
    ( cd "$buildpack/vendor/virtualenv-1.11.6/" ; python virtualenv.py "$@" )
}

echo '== checking godeps'
if test -d $build/Godeps
then
    name=$(<$build/Godeps/Godeps.json jq -r .ImportPath)
    ver=$(<$build/Godeps/Godeps.json jq -r .GoVersion)
elif test -f $build/.godir
then name=$(cat $build/.godir)
else
    echo >&2 " !     A .godir is required. For instructions:"
    echo >&2 " !     http://mmcgrana.github.io/2012/09/getting-started-with-go-on-heroku"
    exit 1
fi

if test -e $build/bin && ! test -d $build/bin
then
    echo >&2 " !     File bin exists and is not a directory."
    exit 1
fi

if test -d $cache/go-$ver/go
then
    echo "-----> Using Go $ver"
else
    rm -rf $cache/* # be sure not to build up cruft
    mkdir -p $cache/go-$ver
    cd $cache/go-$ver
    echo -n "-----> Installing Go $ver..."
    curl -sO $url
    tar zxf $file
    rm -f $file
    echo " done"
fi

cp -R $cache/go-$ver/go $build/.goroot

GOROOT=$build/.goroot export GOROOT
GOPATH=$build/.go export GOPATH
PATH=$GOPATH/bin:$GOROOT/bin:$PATH



echo '== Installing hg and bzr'
if ! (which hg >/dev/null && which bzr >/dev/null)
then
    echo "       Installing Virtualenv..."
    #virtualenv --python $python --distribute --never-download --prompt='(venv) ' $venv > /dev/null 2>&1
    #virtualenv --python $python --distribute --never-download --prompt='(venv) ' $venv
    virtualenv --python $python --prompt='(venv) ' $venv
    echo "..."
    #. $venv/bin/activate > /dev/null 2>&1
    . $venv/bin/activate
    echo "done"

    echo "       Installing Mercurial..."
    pip install mercurial
    echo "       done"

    echo "       Installing Bazaar..."
    pip install bzr
    echo "       done"
fi

p=$GOPATH/src/$name
mkdir -p $p
cp -R $build/* $p

echo "== $build/Godeps"
unset GIT_DIR # unset git dir or it will mess with goinstall
cd $p
if test -e $build/Godeps
then
    echo "=== getting godep"
    go get github.com/tools/godep
    export GOPATH=`godep path`:$GOPATH
    echo "-----> Running: godep go install -tags heroku ./..."
    godep go install -tags heroku ./...
    #godep go get -v -tags heroku ./...
else
    echo "-----> Running: go get -tags heroku ./..."
    go get -v -tags heroku ./...
fi

mkdir -p $build/bin
if test -d $GOPATH/bin 
then
    mv $GOPATH/bin/* $build/bin
fi

rm -rf $build/.heroku

mkdir -p $build/.profile.d
echo 'PATH=$PATH:$HOME/bin' > $build/.profile.d/go.sh

go get github.com/revel/cmd/revel
